import re
from datetime import datetime
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.dispatcher import FSMContext
from states.botStates import StatesOfBot
from loader import dp, bot
from keyboards.inline.setup_button_inline import setup_button
from utils.db_api import quick_commands as commands
from utils.misc import rate_limit
from keyboards.inline.cancel_button_inline import cancel_button
from keyboards.default.choice_stud_or_teach_kb import choice_kb


@rate_limit(limit=5)
@dp.message_handler(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def setup_keyboard(message: Message):
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
                         reply_markup=setup_button)


@dp.callback_query_handler(text_contains="sub_on_schedule")  # Not finished
async def subscribe_to_the_schedule(call: CallbackQuery):
    await call.answer(cache_time=60)
    await bot.delete_message(message_id=call.message.message_id,
                             chat_id=call.message.chat.id)
    await call.message.answer('–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n'
                              '–ù–∞–ø—Ä–∏–º–µ—Ä, "12:45"', reply_markup=cancel_button)
    await StatesOfBot.schedule_state.set()


@dp.message_handler(state=StatesOfBot.schedule_state)
async def set_subscribe(message: Message, state: FSMContext):
    if re.match(r'^(0[0-9]|1[0-9]|2[0-3]|[0-9]):[0-5][0-9]$', message.text):
        await message.answer(f"–í—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: {message.text}")
        await commands.update_user_mailing_time(mailing_time=message.text,
                                                id=message.from_user.id)
        await state.finish()
    else:
        await message.answer(f"–£–∫–∞–∑–∞–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è. \n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


@dp.callback_query_handler(text_contains="come_back", state=StatesOfBot.schedule_state)  # Not finished
async def cancel(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    await bot.delete_message(message_id=call.message.message_id,
                             chat_id=call.message.chat.id)
    await state.finish()


@dp.callback_query_handler(text_contains="advertisement")  # Completed
async def advertising(call: CallbackQuery):
    await call.answer(cache_time=60)
    await bot.delete_message(message_id=call.message.message_id,
                             chat_id=call.message.chat.id)
    await call.message.answer("–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ @scytheofdeath")


@dp.callback_query_handler(text_contains="reset_setup", state=None)  # Not finished
async def reset_settings(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=60)
    await bot.delete_message(message_id=call.message.message_id,
                             chat_id=call.message.chat.id)

    await commands.delete_user_teacher(id=call.message.chat.id)
    await commands.delete_user_name_group(id=call.message.chat.id)
    await commands.delete_user_mailing_time(id=call.message.chat.id)

    await call.message.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä—É–ø–ø—ã –∏ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã")
    await call.message.answer(f'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {call.message.chat.full_name}!\n'
                              f'–ö–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å?', reply_markup=choice_kb)

    await StatesOfBot.start_state.set()
